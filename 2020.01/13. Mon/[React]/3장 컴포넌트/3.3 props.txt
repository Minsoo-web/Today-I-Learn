props는 properties를 줄인 표현으로 컴포넌트 속성을 설정할 때 사용하는 요소입니다. 
props 값은 해당 컴포넌트를 불러와 사용하는 부모 컴포넌트에서 설정할 수 있습니다. 

예시 코드 
    MyComponent.js
    ==================================================================
    import React from 'react';

    const MyComponent = props => {
        return <div>안녕하세요, 제 이름은 {props.name} 입니다. </div>;
    };

    export default MyComponent;

    App.js
    ==================================================================

    import React from 'react';
    import MyComponent from './MyComponent';

    const App = () => {
        return <MyComponent name="react" /> ;
    }

    export default App; 


props 값을 따로 지정하지 않았을 때 보여줄 기본 값을 설정하는 defaultProps에 대해 알아봅시다. 

    MyComponent.js
    ==================================================================
    import React from 'react';

    const MyComponent = props => {
        return <div>안녕하세요, 제 이름은 {props.name} 입니다. </div>;
    };

    MyComponent.defaultProps ={
        name : '기본 이름'
    };

    export default MyComponent;

    
3.4 태그 사이의 내용을 보여주는 children 

리액트 컴포넌트를 사용할 때 컴포넌트 태그 사이의 내용을 보여주는 props를 children 이라고 합니다. 

    MyComponent.js
    ==================================================================
    import React from 'react';

    const MyComponent = props => {
        return (
            <div>
            안녕하세요, 제 이름은 {props.name} 입니다. <br/>
            children 값은 {props.children} 입니다. 
            </div>
            )
    };

    MyComponent.defaultProps ={
        name : '기본 이름'
    };

    export default MyComponent;


    App.js
    ==================================================================

    import React from 'react';
    import MyComponent from './MyComponent';

    const App = () => {
        return <MyComponent name="react">칠드런</MyComponent> ;
    }

    export default App; 

비구조화 할당 문법을 통해 props 내부 값을 추출할 수 있습니다. 
const {name, children } = props
이렇게 해주면 {props.name} 대신에 
{name}으로 바로 작성 가능 

propTypes 
MyComponent.propTypes={
    name : propTypes.검증하고 싶은 데이터 타입 
}

원하는 데이터 타입이 아니면 console 창에 오류가 뜨게 됩니다. 

isRequred 를 뒤에 붙여주면 props 값을 전달받지 않아도 오류가 뜹니다. 


3.7 클래스형 컴포넌트에서 props 사용하기 

클래스형 컴포넌트에서는 render 함수에서 return 전에 this.props를 조회하면 됩니다. 
const {name, children} =this.props 

defaultProps는 render 함수와는 별개로 따로 선언을 해주면 됩니다. 

static defaultProps = {
    name : '기본 이름'
};

defaultProps 와 propTypes는 필수가 아닌 선택이지만 
협업과 큰 규모의 프로젝트를 진행한다면 해당 props가 어떤 props인지를 그리고 어떤 props가 필요한지를 쉽게 알 수 있게 해줍니다. 

