모든 리액트 컴포넌트에는 라이프사이클(수명주기)가 존재합니다. 
컴포넌트의 수명은 페이지에 렌더링되기 전인 준비 과정에서 시작하여 페이지에서 사라질 때 끝납니다. 

리액트 프로젝트를 진행하다 보면 가끔 
컴포넌트를 처음으로 렌더링할 때 어떤 작업을 처리해야하거나 
컴포넌트를 업데이트하기 전후로 어떤 작업을 처리 할 수 있고, 
또 불필요한 업데이트를 방지할 수 있습니다. 

이때는 라이프사이클 메서드를 사용합니다. 
참고로 라이프사이클 메서드는 클래스형 컴포넌트에서만 사용할 수 있습니다. 
함수형 컴포넌트에서는 대신에 Hooks 기능을 사용하여 비슷한 작업을 처리할 수 있습니다. 


7.1 라이프사이클 메서드의 이해 

    라이프사이클 메서드의 종류는 총 아홉 가지입니다. 
    Will 접두사가 붙는 메서드는 어떤 작업을 하기 전에 실행 되는 메서드이고 
    Did 접두사가 붙는 메서드는 어떤 작업을 하고 난 후에 실행되는 메서드입니다. 

    라이프사이클 메서드는 총 세가지 ,
    마운트 / 업데이트 / 언마운트 카테고리로 나뉩니다. 

    1. 마운트 
    DOM이 생성되고 웹 브라우저상에 나타나는 것을 마운트라고 합니다. 이때 호출하는 메서드는 다음과 같습니다. 

    컴포넌트 만들기 
    constuctor : 컴포넌트를 새로 만들 때마다 호출되는 클래스 생성자 메서드입니다. 
    getDerivedStateFromProps : props에 있는 값을 state에 넣을때 사용하는 메서드입니다. 
    render : 우리가 준비한 UI 를 렌더링하는 메서드입니다. 
    componentDidMount : 컴포넌트가 웹 브라우저 상에 나타난 후 호출하는 메서드입니다. 
    
    2. 업데이트 
    컴포넌트는 다음과 같은 총 네가지 경우에 업데이트합니다. 
    props 가 바뀔 때 
    state 가 바뀔 떄 
    부모 컴포넌트가 리렌더링 될 때 
    this.forceUpdate 로 강제로 렌더링을 트리거 할 때 

    업데이트 할 때 호출하는 메서드 
    업데이트를 발생시키는 요인 
    getDerivedStateFromProps : 이 메서드는 마운트 과정에서도 호출되며, 업데이트가 시작하기 전에도 호출됩니다. props의 변화에 따라 state값에도 변화를 주고 싶을 때 사용합니다. 
    shouldComponentUpdate : 컴포넌트가 리렌더링을 할지 말지 결정하는 메서드 입니다. 
    -> true 반환시 render 호출 
    -> false 반환 시 여기서 작업 취소 (리렌더링x) 
    // 만약 this.forceUpdate 함수를 호출한다면 이 과정을 생략하고 render를 호출합니다. 
    render <- forceUpdate 
    getSnapshotBeforeUpdate : 컴포넌트 변화를 DOM에 반영하기 바로 직전에 호출하는 메서드입니다. 
    웹 브라우저상의 실제 DOM 변화 
    componentDidUpdate : 컴포넌트의 업데이트 작업이 끝난 후 호출하는 메서드입니다.

    3. 언마운트 
    컴포넌트를 DOM에서 제거하는 것을 언마운트라고 합니다. 

    componentWillUnmount : 컴포넌트가 웹 브라우저 상에서 사라지기 전에 호출하는 메서드입니다. 

    


    
